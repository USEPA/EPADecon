<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>..\Battelle.EPA.WideAreaDecon.Client\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**;dist\</DefaultItemExcludes>
    <Authors>Kevin Wegman</Authors>
    <Company>Battelle Memorial Institute</Company>
    <Description>Application to calculate the decontamination costs associated with a wide area contamination event</Description>
    <AssemblyName>Battelle.EPA.WideAreaDecon.API</AssemblyName>
    <RootNamespace>Battelle.EPA.WideAreaDecon.API</RootNamespace>
    <Version>0.0.4</Version>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="ElectronNET.API" Version="7.30.2" />
    <PackageReference Include="HtmlAgilityPack" Version="1.11.39" />
    <!--<PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />-->
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson" Version="5.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.1" />
    <PackageReference Include="System.Text.Encodings.Web" Version="5.0.0" />
    <PackageReference Include="VueCliMiddleware" Version="3.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.1" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0" />
    <PackageReference Include="DotNetCore.NPOI" Version="1.2.2" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\InputFiles\ModifyParameters.xlsx" Link="InputFiles\ModifyParameters.xlsx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="..\InputFiles\DefineScenario.xlsx" Link="InputFiles\DefineScenario.xlsx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="..\README.md" />
  </ItemGroup>
  <PropertyGroup>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\Battelle.EPA.WideAreaDecon.API.xml</DocumentationFile>
  </PropertyGroup>
  <!--<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>-->
  <Target Name="DeleteNPMBuild" AfterTargets="AfterClean">
    <Exec WorkingDirectory="$(SpaRoot)" Command="rmdir /S /Q dist" />
  </Target>
  <Target Name="RunWebServer" BeforeTargets="Build">
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Condition="'$(Configuration)'=='Release'" Importance="high" Text="Performing SPA build..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec Condition="'$(Configuration)'=='Release' And Exists('$(SpaRoot)dist')" WorkingDirectory="$(SpaRoot)" Command="rmdir /S /Q dist" />
    <Exec Condition="'$(Configuration)'=='Release'" WorkingDirectory="$(SpaRoot)" Command="npm run build" />
  </Target>
  <Target Name="CopyClientDist" AfterTargets="Build" Condition="'$(Configuration)'=='Release'">
    <Exec WorkingDirectory="$(ProjectDir)" Command="xcopy $(SpaRoot)dist dist /i /s /e /y" />
  </Target>

  <Target Name="PublishWebServer" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <!-- Changing so that this isn't built twice - the commands should be executed on build -->
    <Exec Condition="!Exists('$(SpaRoot)node_modules')" WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec Condition="!Exists('$(SpaRoot)dist')" WorkingDirectory="$(SpaRoot)" Command="npm run build" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>$([System.String]::Copy('%(DistFiles.Identity)').Replace('..\Battelle.EPA.WideAreaDecon.Client', ''))</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\Battelle.EPA.WideAreaDecon.InterfaceData\Battelle.EPA.WideAreaDecon.InterfaceData.csproj" />
    <ProjectReference Include="..\Battelle.EPA.WideAreaDecon.Model\Battelle.EPA.WideAreaDecon.Model.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="appsettings.Development.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.Electron.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="electron.manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="inputFileConfiguration.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ProjectExtensions><VisualStudio><UserProperties appsettings_1json__JsonSchema="Schema\appsettings.schema.json" schema_4appsettings_1schema_1json__JsonSchema="http://json-schema.org/draft-04/schema#" /></VisualStudio></ProjectExtensions>
</Project>